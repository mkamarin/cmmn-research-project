\documentclass{article}
\usepackage{longtable}
\usepackage{booktabs}
\usepackage{placeins}
\usepackage[margin=10pt,font=small,labelfont=bf]{caption}
\definecolor{darkBlue}{rgb}{0,0,0.2}
\usepackage[colorlinks,linkcolor={darkBlue},citecolor={darkBlue},urlcolor={darkBlue},bookmarks=true]{hyperref}
\usepackage[capitalise,noabbrev]{cleveref} %% must be after hyperref


\begin{document}
<<setup, include=FALSE, cache=FALSE>>=
library(knitr)
library(lubridate)
library(car)
library(xtable)
options(xtable.floating = FALSE)
options(xtable.timestamp = "")
options(xtable.tabular.environment = "longtable")
options(xtable.caption.placement = "top")
options(xtable.floating=FALSE)
options(xtable.booktabs=TRUE)
options(xtable.include.rownames = FALSE)
options(xtable.sanitize.text.function=function(x){x})

# set global chunk options
opts_chunk$set(fig.path='figure/basic-', fig.align='center', fig.show='hold', 
               strip.white=TRUE, fig.width=4, fig.height=3, comment=NA, echo = FALSE)
options(formatR.arrow=TRUE,width=90)

### Parameters comming from build.r (in turn they come from Build.[sh|bat]).
### They can be used as a flag to know if we are executing inside RStudio 
if(!exists("data.path")) data.path <- "E:\\PhD\\UNISA\\Dissertation\\Data"
if(!exists("generated.path")) generated.path <- "E:\\PhD\\UNISA\\Dissertation\\Generated"
if(!exists("my.working.dir")) {my.working.dir <- "E:\\PhD\\UNISA\\Dissertation\\Scripts"
 setwd(my.working.dir)
}

data.set.name <- file.path(data.path,"dataset-all.csv")
source(file.path(my.working.dir,"share-read-dataset.r"))
rm(iv,ws.original)
source(file.path(my.working.dir,"share-my-functions.r"))

########################################################################
## Some basic functions

plot.time <- function(txt,tt)
{
  t <- na.omit(tt)
  val <- c(length(t[ t < 60 ]), # < 1min
         length(t[ (t >    60) & (t <   120) ]), # 1 - 2min
         length(t[ (t >   120) & (t <   180) ]), # 2 - 3min
         length(t[ (t >   180) & (t <   240) ]), # 3 - 4min
         length(t[ (t >   240) & (t <   300) ]), # 4 - 5min
         length(t[ (t >   300) & (t <   600) ]), # 5 - 10min
         length(t[ (t >   600) & (t <  1200) ]), # 10 - 20min
         length(t[ (t >  1200) & (t <  1800) ]), # 20 - 30min
         length(t[ (t >  1800) & (t <  3600) ]), # 30min - 1hour
         length(t[ (t >  3600) & (t <  5400) ]), # 1hour - 1:30min
         length(t[ (t >  5400) & (t <  7200) ]), # 1:30min - 2hours
         length(t[ (t >  7200) & (t < 10800) ]), # 2hours - 3hours
         length(t[ (t > 10800) ])) #> 3hours

  lbs <- c("< 1min","1 - 2min","2 - 3min","3 - 4min","4 - 5min","5 - 10min","10 - 20min","20 - 30min",
           "30min - 1hour", "1hour - 1:30min", "1:30min - 2hours","2hours - 3hours", "> 3hours")
  par(mar = c(8, 4, 2, 2) + 0.2) #add room for the rotated labels
  xx <- barplot(height = val,
        names.arg = lbs,
        ylim = c(0, 5+max(val)),
        las = 2, # rotate labels
        main = txt, #space = 1,
        ylab = "Number of subjects",
        font.main = 1, # plain text for title
        cex.main = 1 # normal size for title
        )
  text(x = xx, y=val, pos = 3, cex = 0.8, labels=as.character(val))#, xpd=TRUE)
}

# Seconds to time string
s2t <- function(ss)
{
  s <- na.omit(ss)
  x <- seconds_to_period(s)
  sprintf('%02d:%02d:%02d', x@hour, minute(x), round(second(x)))
}
# Seconds to minutes string
in.min <- function(ss)
{
  sprintf('%d minutes',round(ss/60,digits = 0))
}

basic.duration <- function(txt,dd)
{
  d <- na.omit(dd)
  cat(paste0(txt," time:",
             "\n     N      ", length(d),
             "\n     min    ",s2t(round(min(d),digits = 0))," ~ ",in.min(round(min(d),digits = 0)),
             "\n     median ",s2t(round(median(d),digits = 0))," ~ ",in.min(round(median(d),digits = 0)),
             "\n     max    ",s2t(round(max(d),digits = 0))," ~ ",in.min(round(max(d),digits = 0)),
             "\n     mean   ",s2t(round(mean(d),digits = 0))," ~ ",in.min(round(mean(d),digits = 0)),
             "\n     sd     ",s2t(round(sd(d),digits = 0))," ~ ",in.min(round(sd(d),digits = 0))
             ))
}

@


%\clearpage
\ifdefined\chap
  \chap{Survey statistics}{chap:SurveyStats}
  This section contains a basic set of statistics for the CMMN complexity metrics survey.
\else
  \title{CMMN Survey statistics}
  \author{Mike A. Marin}
  \maketitle
  \tableofcontents
  \newpage
  
  \section{Introduction}\label{chap:SurveyStats}
  This document contains a basic set of statistics for the CMMN complexity metrics survey.
\fi
The survey was distributed using snowball sampling, in which email to potential subjects has been used and the same users have been asked to further distribute the survey.
Twitter, Blogs, and LinkedIn posts have also been used to spread the words about the survey.

The breakdown of participation is as follows,


<<basic, fig.width=4, fig.height=5, comment=NA, echo = FALSE>>=
cat(paste0("Survey Totals:",
            "\n    ", length(which(!is.na(data$submitdate))),"    Completed surveys",
            "\n    ", length(which(data$valid.row==1)),"    Provided valid data",
                   " (includes incomplete surveys)\n",
            "\n    ", length(data$id),                   "   Started the survey (passed page 1)",
            "\n    ", length(which(data$Consent==1)),    "   Agreed to informed consent (passed page 2)",
            "\n    ", length(which(is.na(data$Consent))),"    Did not answer inform consent (stopped at page 2)",
            "\n    ", length(which(data$iv.Group==0)),   "    Did not complete demographics (stopped at page 3)",
            "\n    ", length(which(data$Tutorial==1)),   "   Completed tutorial (passed page 4)"
            ))


total.vals <-  c(length(data$id),
                 length(which(!is.na(data$Consent))),
                 length(which(data$iv.Group>0)),
                 length(which(data$Tutorial==1)),
                 length(which(!is.na(data$submitdate))),
                 length(which(!is.na(data$submitdate) & (data$valid.row==1))),
                 length(which(is.na(data$submitdate) & (data$valid.row==1))))
total.names <-c("Started survey",
                 "Passed informed consent",
                 "Passed demographics",
                 "Passed tutorial",
                 "Completed survey",
                 "Good completed surveys",
                 "Partial good surveys")
  

@

<<pages-completed, fig.width=4, fig.height=4.5,out.width='.4\\linewidth', echo = FALSE, comment=NA, results="asis">>=
par(mar = c(11, 4, 2, 2) + 0.2) #add room for the labels
xx <- barplot(height = total.vals,
        names.arg = total.names,
        ylim = c(0, 50+max(total.vals)),
        las = 2, # rotate labels
        main = "Subjects that started the surveys", #space = 1,
        ylab = "Number of subjects",
        font.main = 1, # plain text for title
        cex.main = 1, # normal size for title
        col = rainbow(length(total.vals))
        )
text(x = xx, y=total.vals, pos = 3, cex = 0.8, labels=as.character(total.vals))#, xpd=TRUE)


val <- c(length(which(data$lastpage==1)),
         length(which(data$lastpage==2)),
         length(which(data$lastpage==3)),
         length(which(data$lastpage==4)),
         length(which(data$lastpage==5)),
         length(which(data$lastpage==6)),
         length(which(data$lastpage==7)),
         length(which(data$lastpage==8))
         )

lbs <- c("Informed concent","Demographics","Tutorial","Model A","Model B","Comparison","Notation","Final page")
par(mar = c(8, 4, 4, 2) + 0.2) #add room for the labels
xx <- barplot(height = val,
        names.arg = lbs,
        ylim = c(0, 13+max(val)),
        las = 2, # rotate labels
        main = "Subject stoped at page", #space = 1,
        ylab = "Number of subjects",
        font.main = 1, # plain text for title
        cex.main = 1, # normal size for title
        col = rainbow(length(val))
        )
text(x = xx, y=val, pos = 3, cex = 0.8, labels=as.character(val))#, xpd=TRUE)

rm(total.vals,total.names)
@

<<pages3-completed, fig.width=4, fig.height=4.5,out.width='.4\\linewidth', echo = FALSE, comment=NA, results="asis">>=
cat("\\captionof{figure}{Number of surveys\\label{fig:BasicStatsSample}}")
@

<<tutorial only, fig.width=4, fig.height=4.5,out.width='.4\\linewidth', echo = FALSE, comment=NA, >>=
# Let extract people that only took the survey to do the tutorial 
Tutorial.only.time <- na.omit(data$Tutorial.Time[is.na(data$valid.row)])

basic.duration("Subjects that only completed the Tutorial",Tutorial.only.time)
plot.time("Subjects that only completed the Tutorial",Tutorial.only.time)


# Now let remove the surveys that were not completed
data <- subset(data,!is.na(data$valid.row))
@


%\clearpage

\section{Basic Statistics}
Here we print some basic statistics about the demographics and prior experience for the \Sexpr{length(which(data$valid.row==1))} surveys that provided valid information.

\subsection{Age of Subjects}
\Sexpr{sum(is.na(data$Age))} subjects did not provide their age.

<<age , fig.width=3.8, fig.height=4, out.width='.4\\linewidth', echo = FALSE, comment=NA>>=
#cat(paste(sum(is.na(data$Age)),"subjects that did not answer."))
#cat("Ages:", data$Age)
hist(data$Age, 
     main = "Age of subjects",
     xlab = "Age",
     ylab = "Number of subjects",
     density = 10,
     angle = 40,
     col = "gray80",
     ylim = c(0,30),
     labels = TRUE,
     font.main = 1, # plain text for title
     cex.main = 1 # normal size for title
     #font.axis = 2 # bold text for numbering
     )
boxplot(data$Age, xlab = "Age")
@

\subsection{Gender of Subjects}

<<gender , fig.width=4, fig.height=4.5,out.width='.4\\linewidth', echo = FALSE, comment=NA>>=
#cat("Gender:",data$Gender)
#hist(data$Gender)
#barplot(prop.table(table(data$Gender)))
val <- c(length(which(data$Gender=="F")),length(which(data$Gender=="M")),sum(is.na(data$Gender)))
lbs <- c("Female","Male","N/A")

xx <- barplot(height = val,
        names.arg = lbs,
        ylim = c(0, 10+max(val)),
        las = 2, # rotate labels
        main = "Gender of subjects", #space = 1,
        ylab = "Number of subjects",
        font.main = 1, # plain text for title
        cex.main = 1, # normal size for title
        col = rainbow(length(val))
        )
text(x = xx, y=val, pos = 3, cex = 0.8, labels=as.character(val))#, xpd=TRUE)

#pie(val,lbs)
percentlabels<- round(100*val/sum(val), 1)
pielabels<- paste(percentlabels, "%", sep="")
pie(val, labels = pielabels, main = "",col = rainbow(length(val)),
    font.main = 1, # plain text for title
    cex.main = 1 # normal size for title
    )
#legend("topright", lbs, cex = 0.8,    fill = rainbow(length(val)))
@

%\clearpage

\subsection{Degree of Subjects}
Question was: Highest degree completed?

<<degree , fig.width=3.7, fig.height=4, out.width='.4\\linewidth', echo = FALSE, comment=NA>>=
#cat("Degree:",data$Degree)
val <- c(length(which(data$Degree==1)),
         length(which(data$Degree==2)),
         length(which(data$Degree==3)),
         length(which(data$Degree==4)),
         length(which(data$Degree==5)),
         sum(is.na(data$Degree)))

lbs <- c("High School","Some University","Bachelor","Master","PhD","N/A")
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels
xx <- barplot(height = val,
        names.arg = lbs,
        ylim = c(0, 5+max(val)),
        las = 2, # rotate labels
        main = "Degree of subjects", space = 1,
        ylab = "Number of subjects",
        font.main = 1, # plain text for title
        cex.main = 1 # normal size for title
        )
text(x = xx, y=val, pos = 3, cex = 0.8, labels=as.character(val))#, xpd=TRUE)
@

%\clearpage

\subsection{Role of Subjects}
Question was: Current role?

<<role , fig.width=4.5, fig.height=4, out.width='.4\\linewidth', echo = FALSE, comment=NA>>=
val <- c(length(which(data$Role.R1==1)),
         length(which(data$Role.R2==1)),
         length(which(data$Role.R3==1)),
         length(which(data$Role.R4==1)),
         length(which(data$Role.R5==1)),
         length(which(data$Role.R6==1)),
         length(which(data$Role.R7==1)),
         length(which(data$Role.R8==1)),
         length(which(data$Role.R9==1)),
         length(which(data$Role.R10==1)),
         sum( !is.na(data$Role.other)),
         sum(is.na(data$Role.count)))

lbs <- c("Analyst","Advisor","Manager","Practitioner","Educator","End user",
         "Consultant","Lecturer","Student","Developer","Other","N/A")
par(mar = c(7, 4, 2, 2) + 0.2) #add room for the rotated labels
xx <- barplot(height = val,
        names.arg = lbs,
        ylim = c(0, 5+max(val)),
        las = 2, # rotate labels
        main = "Role of subjects", #space = 1,
        ylab = "Number of subjects",
        font.main = 1, # plain text for title
        cex.main = 1 # normal size for title
        )
text(x = xx, y=val, pos = 3, cex = 0.8, labels=as.character(val))#, xpd=TRUE)

cat("Roles:",
"\n    Analyst:      Market analyst",
"\n    Advisor:      Advise clients on process technology",
"\n    Manager:      Manager",
"\n    Practitioner: Practitioner (creates process models)",
"\n    Educator:     Educator (trains clients on modeling technologies)",
"\n    End user:     End user of process technology",
"\n    Consultant:   Consultant on process technology",
"\n    Lecturer:     University lecturer",
"\n    Student:      University student",
"\n    Developer:    Designer or developer of process technology products",
"\n    Others:      ", paste0(data$Role.other[!is.na(data$Role.other)],",\n                 ")) 

@

\subsection{Notations Used by Subjects}
Question was: Process model notation used?

<<notation , fig.width=3.6, fig.height=4, out.width='.4\\linewidth', echo = FALSE, comment=NA>>=
val <- c(length(which(data$Notation.None==1)),
         length(which(data$Notation.BPMN==1)),
         length(which(data$Notation.EPC==1)),
         length(which(data$Notation.UMLAD==1)),
         length(which(data$Notation.UML==1)),
         length(which(data$Notation.CMMN==1)),
         sum( !is.na(data$Notation.other)),
         sum(is.na(data$Notation.count)))

lbs <- c("None","BPMN","EPC","UML AD","UML","CMMN","Other","N/A")
par(mar = c(5, 4, 2, 2) + 0.2) #add room for the rotated labels
xx <- barplot(height = val,
        names.arg = lbs,
        ylim = c(0, 5+max(val)),
        las = 2, # rotate labels
        main = "Notations used by subjects", #space = 1,
        ylab = "Number of subjects",
        font.main = 1, # plain text for title
        cex.main = 1 # normal size for title
        )
text(x = xx, y=val, pos = 3, cex = 0.8, labels=as.character(val))#, xpd=TRUE)

cat("Notations:",
    "\n    Others:", paste0(data$Notation.other[!is.na(data$Notation.other)],",\n                 "))
@

\subsection{Opinions of Subjects}
Question was: What statements better reflects your current opinion?

<<bias , fig.width=4.7, fig.height=4, out.width='.4\\linewidth', echo = FALSE, comment=NA>>=
val <- c(length(which(data$Bias.B1==1)),
         length(which(data$Bias.B2==1)),
         length(which(data$Bias.B3==1)),
         length(which(data$Bias.B4==1)),
         length(which(data$Bias.B5==1)),
         length(which(data$Bias.B6==1)),
         length(which(data$Bias.B7==1)),
         length(which(data$Bias.B8==1)),
         length(which(data$Bias.B9==1)),
         length(which(data$Bias.B10==1)),
         sum( !is.na(data$Bias.other)),
         sum(is.na(data$Bias.count)))
lbs <-c("A01","A02","A03","A04","A05","A06","A07","A08","A09","A10","Other","N/A")
par(mar = c(5, 4, 2, 2) + 0.1) #add room for the rotated labels
xx <- barplot(height = val,
        names.arg = lbs,
        ylim = c(0, 5+max(val)),
        las = 2, # rotate labels
        main = "Subject opinions", #space = 1,
        ylab = "Number of subjects",
        font.main = 1, # plain text for title
        cex.main = 1 # normal size for title
        )
text(x = xx, y=val, pos = 3, cex = 0.8, labels=as.character(val))#, xpd=TRUE)

cat("Opinions:",
"\n    A01:   Adaptive case management cannot be modeled in advance",
"\n    A02:   Some initial modeling is required for adaptive case management",
"\n    A03:   BPMN is enough to model adaptive case management",
"\n    A04:   BPMN is not enough for adaptive case management",
"\n    A05:   BPMN and CMMN should be merged into a single standard",
"\n    A06:   BPMN and CMMN should be maintained as separate standards",
"\n    A07:   CMMN is irrelevant",
"\n    A08:   BPMN is irrelevant",
"\n    A09:   Both CMMN and BPMN are irrelevant for adaptive case management",
"\n    A10:   I do not know enough about CMNN to answer the question",
"\n    Other:", paste0(data$Bias.other[!is.na(data$Bias.other)],",\n                 "))

@

%\clearpage

\subsection{Work Experience of Subjects}

\subsubsection{IT Experience}
Question was: Work experience in the IT-sector? (in years)

\Sexpr{sum(is.na(data$IT))} subjects did not provide an answer, and \Sexpr{length(data$IT[data$IT==0])} has zero IT experience.

<<IT , fig.width=3.7, fig.height=4, out.width='.4\\linewidth', echo = FALSE, comment=NA>>=

hist(data$IT,
     main = "IT experience of subjects",
     xlab = "Experience (in years)",
     ylab = "Number of subjects",
     density = 10,
     angle = 40,
     col = "gray80",
     ylim = c(0,50),
     labels = TRUE,
     font.main = 1, # plain text for title
     cex.main = 1 # normal size for title
     #font.axis = 2 # bold text for numbering
     )
boxplot(data$IT, xlab = "IT experience")
@

%\clearpage

\subsubsection{Years of Modeling}
Question was: Work experience with process (or workflow) models? (in years)

\Sexpr{sum(is.na(data$Work))} subjects did not provide an answer, and \Sexpr{length(data$Work[data$Work==0])} has zero modeling experience.

<<work , fig.width=3, fig.height=4, out.width='.4\\linewidth', echo = FALSE, comment=NA>>=

hist(data$Work,
     main = "Years of modeling of subjects",
     xlab = "Experience (in years)",
     ylab = "Number of subjects",
     density = 10,
     angle = 40,
     col = "gray80",
     ylim = c(0,50),
     labels = TRUE,
     font.main = 1, # plain text for title
     cex.main = 1 # normal size for title
     #font.axis = 2 # bold text for numbering
     )
boxplot(data$Work, xlab = "modeling experience")
@

%\clearpage

\subsubsection{Modeling Experience}
Calculated variable using notation used, years of modeling, and formal modeling training.

<<modeling-experience, fig.width=3, fig.height=4, out.width='.4\\linewidth', echo = FALSE, comment=NA>>=
val <- c(length(which(data$notation.experience==1)),
         length(which(data$notation.experience==2)),
         length(which(data$notation.experience==3)),
         length(which(data$notation.experience==4)),
         length(which(data$notation.experience==5)),
         length(which(data$notation.experience==6)),
         sum(is.na(data$notation.experience)))
lbs <-c("E01","E02","E03","E04","E05","E06","N/A")
par(mar = c(5, 4, 2, 2) + 0.1) #add room for the rotated labels
xx <- barplot(height = val,
        names.arg = lbs,
        ylim = c(0, 5+max(val)),
        las = 2, # rotate labels
        main = "Subject notation experience", #space = 1,
        ylab = "Number of subjects",
        font.main = 1, # plain text for title
        cex.main = 1 # normal size for title
        )
text(x = xx, y=val, pos = 3, cex = 0.8, labels=as.character(val))#, xpd=TRUE)

cat("Opinions:",
"\n    E01:   No notation experience",
"\n    E02:   Not using a notation, but has training or experience",
"\n    E03:   Using a notation (no CMMN) without any training or experiencet",
"\n    E04:   Using a notation (no CMMN) with some training or experience",
"\n    E05:   Using CMMN, but without training or experience",
"\n    E06:   Using CMMN and has training or experience")

@


%\clearpage

\subsection{Formal Training of Subjects}
Question was: Formal training on process (or workflow) modeling? (in weeks)

\Sexpr{sum(is.na(data$Training))} subjects did not provide an answer, and \Sexpr{length(data$Training[data$Training==0])} has zero formal training.

<<training, fig.width=3.6, fig.height=4, out.width='.4\\linewidth', echo = FALSE, comment=NA>>=

hist(data$Training, 
     main = "Training of subjects",
     xlab = "Training (in weeks)",
     ylab = "Number of subjects",
     density = 10,
     angle = 40,
     col = "gray80",
     ylim = c(0,80),
     labels = TRUE,
     font.main = 1, # plain text for title
     cex.main = 1 # normal size for title
     #font.axis = 2 # bold text for numbering
     )
boxplot(data$Training, xlab = "Training")

@

\subsection{Duration}
Duration is given in hh:mm:ss (hours, minutes, and seconds), and in minutes.
Note that subjects had the ability to do the survey in multiple sessions.

<<duration, fig.width=3.6, fig.height=4, out.width='.4\\linewidth', echo = FALSE, comment=NA>>=

basic.duration("Survey",data$Survey.Time)
basic.duration("Tutorial",data$Tutorial.Time[data$Tutorial.Time != 0])
basic.duration("Informed concent",data$Concent.Time)
basic.duration("Total",data$Total.Time)

plot.time("Survey",data$Survey.Time)
plot.time("Tutorial",data$Tutorial.Time[data$Tutorial.Time != 0])
plot.time("Informed concent",data$Concent.Time)
plot.time("Total",data$Total.Time)

@

%\clearpage

\subsection{Correct Answers}
Subjects were exposed to two models, model A and model B. 
Five questions were asked for each model. 
Each question had a one point value.
One question was evaluated with .25, .50, .75, and 1.
Therefore, correct answers range from 0.25 to 5 points.

<<model-a , fig.width=3.7, fig.height=4, out.width='.4\\linewidth', echo = FALSE, comment=NA>>=

hist(data$A.Correct,
     main = "Model A",
     xlab = "Number of correct answers",
     ylab = "Number of subjects",
     density = 10,
     angle = 40,
     col = "gray80",
     ylim = c(0,50),
     labels = TRUE,
     font.main = 1, # plain text for title
     cex.main = 1 # normal size for title
     #font.axis = 2 # bold text for numbering
     )
boxplot(data$A.Correct, main = "Model A", xlab = "Number of correct answers", 
        font.main = 1, cex.main = 1)
@


<<model-b , fig.width=3.7, fig.height=4, out.width='.4\\linewidth', echo = FALSE, comment=NA>>=

hist(data$B.Correct,
     main = "Model B",
     xlab = "Number of correct answers",
     ylab = "Number of subjects",
     density = 10,
     angle = 40,
     col = "gray80",
     ylim = c(0,50),
     labels = TRUE,
     font.main = 1, # plain text for title
     cex.main = 1 # normal size for title
     #font.axis = 2 # bold text for numbering
     )
boxplot(data$B.Correct, main = "Model B", xlab = "Number of correct answers", 
        font.main = 1, cex.main = 1)
@

%\clearpage

The time used working on each model was recorded.

<<model-duration, fig.width=3.6, fig.height=4, out.width='.4\\linewidth', echo = FALSE, comment=NA>>=
basic.duration("Model A",data$A.Time[!is.na(data$A.Correct)])
basic.duration("Model B",data$B.Time[!is.na(data$B.Correct)])

plot.time("Model A",data$A.Time[!is.na(data$A.Correct)])
plot.time("Model B",data$B.Time[!is.na(data$B.Correct)])

@



%\clearpage

\section{Charitable Contributions}

<<charity, fig.width=3, fig.height=4, out.width='.4\\linewidth', echo = FALSE, comment=NA>>=
data$chrty <- data$Charity
data$chrty[is.na(data$Charity)] <- data$Charity.other[is.na(data$Charity)]

val <- c(length(which(data$Charity=="A1")),
         length(which(data$Charity=="A2")),
         length(which(data$Charity=="A3")),
         length(which(data$Charity=="A4")),
         sum( !is.na(data$Charity.other)),
         sum(is.na(data$chrty)))
lbs <- c("AMF","SCI","Deworm","Give","Other","N/A")
par(mar = c(5, 4, 2, 2) + 0.1) #add room for the rotated labels
xx <- barplot(height = val,
        names.arg = lbs,
        ylim = c(0, 5+max(val)),
        las = 2, # rotate labels
        main = "Contributions", #space = 1,
        ylab = "Number of subjects",
        font.main = 1, # plain text for title
        cex.main = 1 # normal size for title
        )
text(x = xx, y=val, pos = 3, cex = 0.8, labels=as.character(val))#, xpd=TRUE)

cat("Charitable organizations:",
"\n    AMF:    Against Malaria Foundation",
"\n    SCI:    Schistosomiasis Control Initiative",
"\n    Deworm: Deworm the World Initiative",
"\n    Give:   GiveDirectly",
"\n    Other:", paste0(data$Charity.other[!is.na(data$Charity.other)],",\n                 "))

val <- c(length(which(data$Charity=="A1")),
         length(which(data$Charity=="A2")),
         length(which(data$Charity=="A3")),
         length(which(data$Charity=="A4")),
         sum( !is.na(data$Charity.other)))

val <- val * 6
cat("Contributions:",
"\n    AMF:    $", val[1],
"\n    SCI:    $", val[2],
"\n    Deworm: $", val[3],
"\n    Give:   $", val[4],
"\n    Other:  $", val[5],
"\n            -------",
"\n    TOTAL:  $", sum(val))

@

\section{Hypothesis Testing}
This section complements \cref{sec:expAnalysis}.

<<Hypothesis-testing>>=
## For hypothesis testing we need to use the same dataset used for the results
#print(paste("all: length of C.Compare",length(na.omit(data$C.Compare))))
rm(data)

data <- read.csv(file.path(data.path,"dataset-clean.csv"), header = TRUE, sep = ",", quote = "'\"", 
                 na.strings=c("", "\"\""), stringsAsFactors=FALSE)

#data <- subset(data,notation.experience > 1)
data$A.Correct[data$A.Time < 120] <- NA
data$A.perceived[data$A.Time < 120] <- NA
data$A.Efficacy[data$A.Time < 120] <- NA
data$A.Efficiency[data$A.Time < 120] <- NA
data$A.Time[data$A.Time < 120] <- NA

data$B.Correct[data$B.Time < 120] <- NA
data$B.perceived[data$B.Time < 120] <- NA
data$B.Efficacy[data$B.Time < 120] <- NA
data$B.Efficiency[data$B.Time < 120] <- NA
data$B.Time[data$B.Time < 120] <- NA

#print(paste("clean: length of C.Compare",length(na.omit(data$C.Compare))))

@

\subsection{Descriptive Statistics}\label{sec:descriptiveStats}
The descriptive statistics of the main dependent variables (see \cref{table:variables}) are presented here.
\Cref{table:RatioDescrStats} shows the descriptive statistics for the ratio scale dependent variables,
while \cref{table:OrdinalDescrStats} shows the descriptive statistics for the ordinal scale dependent variables.

<<descriptive-stats, results="asis">>=
#test.normal.sample.data()

dsr <- descriptive.stats.ratio(data, c("A.Correct", "A.Time", "A.Efficacy", "A.Efficiency",
                                      "B.Correct", "B.Time", "B.Efficacy", "B.Efficiency"))
print(xtable(dsr, caption = "Descriptive statistics for ratio scale variables\\label{table:RatioDescrStats}",
      digits = c(0,0,0,3,3,3,3,3)))

dso <- descriptive.stats.ordinal(data, c("C.Compare", "A.perceived", "B.perceived","Weights.CasePlan", 
                                         "Weights.Stage", "Weights.DStage",
                "Weights.PlanFrag", "Weights.CFileItem", "Weights.Task", "Weights.DTask", 
                "Weights.NBHTask", "Weights.ProcTask", "Weights.CaseTask", "Weights.CaseTasknim", 
                "Weights.BHTask", "Weights.Event", "Weights.UserEvent", "Weights.TimerEvent", 
                "Weights.Milestone", "Weights.Connector", "Weights.HumanIcon", 
                "Weights.CPlanningT", "Weights.EPlanningT", "Weights.AComplete", 
                "Weights.Collapsed", "Weights.Expanded", "Weights.ManualA", "Weights.Repetition",
                "Weights.Required", "Weights.EntryCritWC", "Weights.EntryCrit", 
                "Weights.ExitCritWC", "Weights.ExitCrit", "Weights.EntryCritAND", 
                "Weights.EntryCritOR", "Weights.ExitCritAND", "Weights.ExitCritOR"))
print(xtable(dso, caption = "Descriptive statistics for ordinal scale variables\\label{table:OrdinalDescrStats}",
      digits = c(0,0,0,0,0,2,0)))

rm(dsr,dso)
@

The variable C.Compare records the comparison for 15 groups.
\cref{table:CompGroup} shows descriptive statistics for each group.

<<pairwise-test, results="asis", echo = FALSE, results="asis">>=
# first subset the data and extract complete cases
pair.df <- subset(data, select = c(C.Compare,iv.C.calc))
pair.df <- pair.df[complete.cases(pair.df),]

# now let print descriptive statistics for each group
tabl <- data.frame(Group = character(0), N = integer(0), Mean = numeric(0), SD = numeric(0))
for(c in unique(pair.df$iv.C.calc))
{
  vals <- pair.df$C.Compare[pair.df$iv.C.calc == c]
  tabl <- rbind(tabl, data.frame(Group = as.character(c), 
                                 N = as.integer(length(vals)), 
                                 Mean = as.numeric(round(mean(vals),3)),
                                 SD = as.numeric(round(sd(vals),3))))
}
print(xtable(tabl, caption = "C.Compare group descriptive statistics\\label{table:CompGroup}", 
             digits = c(0,0,0,3,3)), include.rownames = FALSE)
rm(vals,tabl,pair.df)

@


\subsection{Normality Plots}\label{sec:normalityPlots}
The following plots consist of a histogram with an over-imposed density graph in blue and a normal Q-Q plot for each dependent variable.
The plots for time (A.Time and B.Time) to indicate substantial non-normality of these variables.
The plots for the other variables also indicate non-normality.
Therefore, due to the presence of non-normality among these dependent variables, a series of Spearman's correlations tests were conducted to test the hypothesis involving ratio scale dependent variables.

%These figures illustrate the visual presence of normality along with the absence of outliers with respect to this measure.

<<A-Efficacy-normality, fig.width=4, fig.height=4, out.width='.4\\linewidth'>>=
normality.charts(data, c("A.Correct", "B.Correct", "A.Time", "B.Time", 
                         "A.Efficacy","B.Efficacy", "A.Efficiency","A.Efficiency"))

#print("Testing only: -- looking at C.Compare as ratio scale")
#normality.charts(data, c("C.Compare"))
@

For ordinal scale dependent variables frequency plots were used.

<<stem-plots, fig.width=4, fig.height=4, out.width='.4\\linewidth', echo = FALSE>>=
plot.perceived(data,"A.perceived")
plot.perceived(data,"B.perceived")
plot.compare(data,"C.Compare")
#%cat("\\captionof{figure}{Stem-and-Leaf plot of C.Compare\\label{fig:stemPlotCCompare}}")

@


\subsection{Scatter-Plots}\label{sec:scatterplots}
A series of scatter-plots were constructed between these measures in order to explore the presence of linearity.
Observations are represented with a dot.
A blue regression line is plotted on all the scatter-plots.
For scatter-plots with ordinal data, a red `x' represents the mean on each column, and a red line connecting the means is also plotted.

\subsubsection{Model Comprehension Scatter-Plots}\label{sec:MCscatterplots}

<<MC-scatter-plots, fig.width=5, fig.height=4, out.width='.4\\linewidth',  echo = FALSE>>=
#scatterplotMatrix(subset(data, select = c("A.perceived","B.perceived","A.Correct","B.Correct")),diagonal="histogram", smooth=FALSE)

mk.scatter.plots(data,c("A.Correct","A.Time","A.Efficacy","A.Efficiency"), 
                      c("iv.A.CC","iv.A.CL","iv.A.CS","iv.A.CAS"))

mk.scatter.plots(data,c("B.Correct","B.Time","B.Efficacy","B.Efficiency"), 
                      c("iv.B.CC","iv.B.CL","iv.B.CS","iv.B.CAS"))

@


\subsubsection{Perceived Complexity Scatter-Plots}\label{sec:PCscatterplots}

<<PC-scatter-plots, fig.width=5, fig.height=4, out.width='.4\\linewidth',  echo = FALSE>>=
mk.scatter.plots(data,c("A.perceived"), 
                      c("iv.A.CC","iv.A.CL","iv.A.CS","iv.A.CAS"), Mean = TRUE)

mk.scatter.plots(data,c("B.perceived"), 
                      c("iv.B.CC","iv.B.CL","iv.B.CS","iv.B.CAS"), Mean = TRUE)

@


\subsubsection{Perceived Complexity and Model Comprehension Scatter-Plots}\label{sec:PCMCscatterplots}

<<PCMC-scatter-plots, fig.width=5, fig.height=4, out.width='.4\\linewidth',  echo = FALSE>>=

mk.scatter.plots(data,c("A.perceived","B.perceived"),
                 c("A.Correct","A.Time","A.Efficacy","A.Efficiency",
                   "B.Correct","B.Time","B.Efficacy","B.Efficiency"), Mean = TRUE)

@

\subsection{Pairwise Plots}\label{sec:PairwisePlots}
This section presents a set of box-plots and frequency plots used to explore the data.

\subsubsection{Pairwise Box-Plots}\label{sec:PairwiseBoxPlots}
The following box-plots explore describe the C.Compare dependent variable by visualizing each independent variable order of the 15 groups.
The red chevron indicates the expected mean (based on the metric ordering).

<<Box-pairwise-plots, fig.width=5, fig.height=4, out.width='.4\\linewidth', echo = FALSE>>=
#compare2.boxplot(data,"C.Compare",c("iv.C.order15.CC","iv.C.order15.CL","iv.C.order15.CS","iv.C.order15.CAS"))
compare3.boxplot(data,"C.Compare","iv.C.calc",c("iv.C.CC","iv.C.CL","iv.C.CS","iv.C.CAS"))

@


\subsubsection{Pairwise Frequency Plots}\label{sec:PairwiseFrqPlots}
This section shows the 15 frequency plots of C.Compare categorized by each of the 15 groups (iv.C.Calc) of model comparisons.
The plots have been annotated with the expected value of the independent variables as follows, \texttt{C} for $CC$, \texttt{L} for $CL$, \texttt{S} for $CS$, and \texttt{A} for $CAS$. 

<<Feq-pairwise-plots, fig.width=5, fig.height=4, out.width='.4\\linewidth', echo = FALSE>>=
plot.pairwise.X(data$C.Compare)
for(c in unique(data$iv.C.calc))
{
  x <- data$C.Compare[data$iv.C.calc == c]
  cc <- data$iv.C.CC[data$iv.C.calc == c]
  cl <- data$iv.C.CL[data$iv.C.calc == c]
  cs <- data$iv.C.CS[data$iv.C.calc == c]
  cas <- data$iv.C.CAS[data$iv.C.calc == c]
  plot.pairwise(c,x,cc[1],cl[1],cs[1],cas[1])
}
rm(x,cc,cl,cs,cas)

#mk.scatter.plots(data,c("C.Compare"), 
#                      c("iv.C.CC","iv.C.CL","iv.C.CS","iv.C.CAS"), Mean = TRUE)
#mk.scatter.plots(data,c("iv.C.CC","iv.C.CL","iv.C.CS","iv.C.CAS"),c("C.Compare"), Mean = TRUE)

@


\subsubsection{Complexity Weights Plots}\label{sec:WeigtsPlots}
This section shows the frequency plots for the 34 weight dependent variables.
Each frequency plot, shows in round parenthesis the hypothesized population mean. 

<<weights-plots, fig.width=2.5, fig.height=2.5, out.width='.4\\linewidth', echo = FALSE>>=
plot.weights(data,gsub("\\.W$","",sub("^iv\\.w","Weights",names(ws))), unlist(ws))

@


\end{document}

